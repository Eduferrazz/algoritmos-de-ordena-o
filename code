# QuickSort Implementation
def quicksort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)

# Insertion Sort Implementation
def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

# Comb Sort Implementation
def comb_sort(arr):
    gap = len(arr)
    shrink = 1.3
    sorted = False

    while not sorted:
        gap = int(gap / shrink)
        if gap <= 1:
            gap = 1
            sorted = True

        i = 0
        while i + gap < len(arr):
            if arr[i] > arr[i + gap]:
                arr[i], arr[i + gap] = arr[i + gap], arr[i]
                sorted = False
            i += 1
    return arr

# TimSort Implementation
def timsort(arr):
    min_run = 32
    n = len(arr)

    for i in range(0, n, min_run):
        insertion_sort(arr[i:min(i + min_run, n)])

    size = min_run
    while size < n:
        for start in range(0, n, size * 2):
            mid = min(n - 1, start + size - 1)
            end = min((start + size * 2 - 1), (n-1))
            merged_arr = merge(arr, start, mid, end)
            arr[start:start + len(merged_arr)] = merged_arr
        size *= 2
    return arr

def merge(arr, left, mid, right):
    left_part = arr[left:mid + 1]
    right_part = arr[mid + 1:right + 1]
    if len(left_part) == 0 or len(right_part) == 0:
        return left_part + right_part
    result = []
    i = j = 0
    while i < len(left_part) and j < len(right_part):
        if left_part[i] <= right_part[j]:
            result.append(left_part[i])
            i += 1
        else:
            result.append(right_part[j])
            j += 1
    result.extend(left_part[i:])
    result.extend(right_part[j:])
    return result

# Example usage
if __name__ == "__main__":
    array = [34, 7, 23, 32, 5, 62, 32]
    
    print("Original array:", array)
    
    print("Sorted by QuickSort:", quicksort(array.copy()))
    print("Sorted by Insertion Sort:", insertion_sort(array.copy()))
    print("Sorted by Comb Sort:", comb_sort(array.copy()))
    print("Sorted by TimSort:", timsort(array.copy()))
